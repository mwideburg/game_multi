[{"/Users/michaelwideburg/Desktop/multiGame/chat-client/src/index.js":"1","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Chat/Chat.js":"2","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/mainContext.js":"3","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Game/scene.js":"4","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Login/Login.js":"5","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/DefaultPage.js":"6","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/socketContext.js":"7","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/usersContext.js":"8","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Game/game.js":"9","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/App.js":"10","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Game/pong.js":"11","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Game/scene2.js":"12"},{"size":410,"mtime":1611485668000,"results":"13","hashOfConfig":"14"},{"size":4833,"mtime":1621538342106,"results":"15","hashOfConfig":"14"},{"size":449,"mtime":1622138499913,"results":"16","hashOfConfig":"14"},{"size":13332,"mtime":1622155133127,"results":"17","hashOfConfig":"14"},{"size":2657,"mtime":1622034216535,"results":"18","hashOfConfig":"14"},{"size":483,"mtime":1621529260351,"results":"19","hashOfConfig":"14"},{"size":436,"mtime":1621529308544,"results":"20","hashOfConfig":"14"},{"size":407,"mtime":1622034216535,"results":"21","hashOfConfig":"14"},{"size":1327,"mtime":1622060341886,"results":"22","hashOfConfig":"14"},{"size":1117,"mtime":1621531417098,"results":"23","hashOfConfig":"14"},{"size":4046,"mtime":1622042535072,"results":"24","hashOfConfig":"14"},{"size":3062,"mtime":1622042520250,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"smhams",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/michaelwideburg/Desktop/multiGame/chat-client/src/index.js",[],"/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Chat/Chat.js",[],["58","59"],"/Users/michaelwideburg/Desktop/multiGame/chat-client/src/mainContext.js",[],"/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Game/scene.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91"],"import ReactDOM from \"react-dom\";\nimport React, { useContext, useEffect, useState, useRef } from 'react'\nimport { Box, Flex, Heading, IconButton, Text, Menu, Button, MenuButton, MenuList, MenuItem } from \"@chakra-ui/react\"\nimport { useHistory } from 'react-router-dom'\nimport { MainContext } from '../../mainContext'\nimport { SocketContext } from '../../socketContext'\nimport { UsersContext } from '../../usersContext'\nimport * as THREE from \"three\";\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls.js';\nimport { Socket } from \"socket.io-client\";\n\n\nconst Scene = () => {\n    const ref = useRef();\n    const { users, games, setUsers, setGames } = useContext(UsersContext)\n    const { name, room, game, setName, setRoom, setGame } = useContext(MainContext)\n    const [scene, setScene] = useState(new THREE.Scene())\n    const [players, setPlayers] = useState({});\n    const socket = useContext(SocketContext)\n    const[player1Name, setName1] = useState(game.player1)\n    const[player2Name, setName2] = useState(game.player2)\n\n    const history = useHistory()\n    useEffect(() => { if (!name) return history.push('/') }, [history, game])\n    const [pressedKeys, setPressedKeys] = useState([]);\n\n    const ALLOWED_KEYS = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight']\n        \n    useEffect(() => {\n       \n        \n        let objects = null;\n        let moveForward = false;\n        let moveBackward = false;\n        let moveLeft = false;\n        let moveRight = false;\n        let canJump = false;\n        let prevTime = performance.now();\n        let start;\n        const velocity = new THREE.Vector3();\n        const direction = new THREE.Vector3();\n        let selections = \"player1\";\n        var ballDirX = 1, ballDirY = 1, ballSpeed = .1;\n\n        const camera = new THREE.PerspectiveCamera(\n            75,\n            window.innerWidth / window.innerHeight,\n            0.1,\n            1000\n        );\n        const renderer = new THREE.WebGLRenderer();\n        renderer.setSize(850, 500);\n\n        ref.current.appendChild(renderer.domElement);\n       \n        \n        \n       \n        camera.position.z = 5;\n        if (objects === null) {\n            objects = createPong();\n        }\n\n        \n        socket.on('movePlayers', (positions) => {\n\n            \n           \n            objects[\"player2\"].position.set(...positions.player2)\n            \n            if(positions.ball === undefined ){\n                return\n            }\n            if(selected != \"player1\"){\n                objects[\"player1\"].position.set(...positions.player1)\n                let newBall = makeBall(...positions.ball)\n                scene.remove(objects[\"ball\"])\n                objects[\"ball\"] = newBall\n\n                scene.add(newBall)\n\n                ballDirY = positions.ballDirY\n                ballDirX = positions.ballDirX\n                ballSpeed = positions.ballSpeed\n            }\n\n\n        })\n        let controls = null;\n        let selected = null;\n        let computer = false;\n  \n        socket.on(\"playerAdded\", user => {\n         \n            if(games.status){\n                \n                return;\n            }\n\n            if (user.selected === \"player2\") {\n                computer = false\n            }\n            \n            if (user.selected === \"full\") {\n                \n                return;\n            }\n            if (user.name != name) {\n                \n                return;\n            }\n            \n            selected = user.selected\n            \n            \n            if(user.selected === \"player1\"){\n                computer = true\n            }\n            \n\n            controls = new PointerLockControls(objects[user.selected], renderer.domElement);\n            scene.add(controls.getObject());\n            \n            window.addEventListener('keydown', onKeyDown);\n            window.addEventListener('keyup', onKeyUp);\n\n            \n            \n\n            \n            // socket.emit('playerSelected', { selections, position })\n        })\n\n        Object.keys(objects).forEach((key) => {\n                \n                    let player = objects[key]\n                    scene.add(player)\n                \n                \n            \n        })\n      \n       \n\n        socket.on(\"startGame\", (game) => {\n            \n           \n            document.getElementById(\"start-game\").style.display = \"none\"\n           \n            if(computer === true){\n                setName2(\"Computer\")\n            }\n            \n            start = true;\n        })\n      \n        \n        const onKeyDown = function (event) {\n\n            switch (event.code) {\n\n                case 'ArrowUp':\n                case 'KeyW':\n                    moveForward = true;\n                    break;\n\n                case 'ArrowLeft':\n                case 'KeyA':\n                    moveLeft = true;\n                    break;\n\n                case 'ArrowDown':\n                case 'KeyS':\n                    moveBackward = true;\n                    break;\n\n                case 'ArrowRight':\n                case 'KeyD':\n                    moveRight = true;\n                    break;\n\n                case 'Space':\n                    if (canJump === true) velocity.y += 350;\n                    canJump = false;\n                    break;\n                default:\n                    break;\n            }\n\n        };\n        \n\n        const onKeyUp = function (event) {\n\n            switch (event.code) {\n\n                case 'ArrowUp':\n                case 'KeyW':\n                    moveForward = false;\n                    break;\n\n                case 'ArrowLeft':\n                case 'KeyA':\n                    moveLeft = false;\n                    break;\n\n                case 'ArrowDown':\n                case 'KeyS':\n                    moveBackward = false;\n                    break;\n\n                case 'ArrowRight':\n                case 'KeyD':\n                    moveRight = false;\n                    break;\n                default:\n                    break;\n\n            }\n\n        };\n        const moveComputer = (player2, ball, delta) => {\n          \n            let dir = 0\n       \n            \n          \n            \n            if(ballDirX < 0){\n                return;\n            }\n            if(player2.position.y > ball.position.y){\n                dir -= .03\n            }\n            if (player2.position.y < ball.position.y) {\n                dir += .03\n            }\n\n           \n\n            player2.translateY(dir);\n            socket.emit(\"move\", {id: socket.id, room: room, computer: true, selected: \"player2\", position: [player2.position.x, player2.position.y, player2.position.z], ball: \"computer\"})\n        }\n        const collisionCheck = (ball) => {\n            \n            \n            if (ballDirY > ballSpeed * 2) {\n                ballDirY = ballSpeed * 2;\n            }\n            else if (ballDirY < -ballSpeed * 2) {\n                ballDirY = -ballSpeed * 2;\n            }\n            // if ball goes off the top side (side of table)\n            if (ball.position.y >= 3) {\n                ballDirY = -ballDirY;\n            }\n\n            // if ball goes off the bottom side (side of table)\n            if (ball.position.y <= -3) {\n                ballDirY = -ballDirY;\n            }\n            if (ball.position.x >= 6) {\n                ballDirX = -ballDirX;\n            }\n\n            // if ball goes off the bottom side (side of table)\n            if (ball.position.x <= -6) {\n                ballDirX = -ballDirX;\n            }\n            const playArr = [objects[\"player1\"], objects[\"player2\"]]\n            playArr.forEach(player => {\n                // const top = ball.position.distanceTo(player.position)\n                const tr = [player.position.x + .05, player.position.y + .5]\n                const bl = [player.position.x - .05, player.position.y - .5]\n                const distance = ball.position.distanceTo(player.position)\n                const ballPos = ball.position\n                const number1 = (tr[0] > 0) ? 0 : .2\n                const number2 = (tr[0] > 0) ? -.2 : 0\n                if (ballPos.x <= tr[0] + number1 && ballPos.x >= tr[0] + number2 && ballPos.y <= tr[1] && ballPos.y >= bl[1]){\n                    ballDirX = -ballDirX;\n                    // ballDirY = -ballDirY;\n                }\n            })\n            ball.position.x += ballDirX * ballSpeed;\n            ball.position.y += ballDirY * ballSpeed;\n            \n            \n        }\n        \n        \n        const animate = function () {\n            requestAnimationFrame(animate);\n            \n            if(controls != null && selected != null && start){\n                const time = performance.now();\n                const delta = (time - prevTime) / 1000;\n                let dir = 0\n                if (moveForward) {\n                    if (controls.getObject().position.y < 3.3) {\n                        dir = .1\n                    }\n\n                }\n\n                if (moveBackward) {\n                    if (controls.getObject().position.y > -3.3) {\n                        dir = -.1\n                    }\n                }\n                \n                controls.getObject().position.y += (dir); // new behavior\n                \n                const play = objects[selected]\n                \n                \n                const ball = objects[\"ball\"]\n                if (computer) {\n           \n                    moveComputer(objects[\"player2\"], ball, delta);\n                }\n                if (selected === \"player1\") {\n\n                    collisionCheck(objects[\"ball\"])\n                }\n                \n                if(selected === \"player1\"){\n                    socket.emit('move', { position: [play.position.x, play.position.y, play.position.z], selected: selected, id: socket.id, name: name, ballSpeed: ballSpeed, ballDirX: ballDirX, ballDirY: ballDirY, ball: [ball.position.x, ball.position.y, ball.position.z] });\n                }else{\n\n                    socket.emit('move', { position: [play.position.x, play.position.y, play.position.z], selected: selected, id: socket.id, name: name});\n                }\n\n\n                prevTime = time;\n\n            }\n            \n            \n            renderer.render(scene, camera);\n        };\n        \n        animate();\n\n        return () => {\n            // Callback to cleanup three js, cancel animationFrame, etc\n        }\n    }, []);\n\n    const createPong = () => {\n        const newPlayers = {}\n        var geometry = new THREE.BoxGeometry(.2, 1, 0);\n        var sphere = new THREE.CircleGeometry(.12, 32);\n        var material = new THREE.MeshBasicMaterial({ color: \"white\" });\n\n        let play1 = new THREE.Mesh(geometry, material);\n        let play2 = new THREE.Mesh(geometry, material);\n        let ball = new THREE.Mesh(sphere, material);\n        ball.position.set(0, 0, 0)\n        play1.position.set(-5, 0, 0);\n        play2.position.set(5, 0, 0);\n        \n        newPlayers[\"player1\"] = play1\n        newPlayers[\"player2\"] = play2\n        newPlayers[\"ball\"] = ball\n        \n\n        setPlayers(newPlayers)\n        \n       \n        return newPlayers\n    }\n\n    const makeBall = (x, y, z) => {\n        var sphere = new THREE.CircleGeometry(.12, 32);\n        var material = new THREE.MeshBasicMaterial({ color: \"white\" });\n        let ball = new THREE.Mesh(sphere, material);\n        ball.position.set(x, y, z)\n       return ball\n    }\n\n    const startGame = () => {\n        \n        socket.emit(\"start\")\n        \n    }\n    const selectPlayer = (selected) => {\n    \n       \n        const user = users.find(user => user.name === name)\n      \n        if(user.selected != null){\n            return;\n        }\n        document.getElementById(\"player1\").style.display = \"none\"\n        document.getElementById(\"player2\").style.display = \"none\"\n\n        const player = players[selected]\n        \n      \n        let position = [players[selected].position.x, players[selected].position.y, players[selected].position.z]\n        socket.emit('playerSelected', {selected, position})\n        \n       \n    } \n\n    return (\n        \n        <Flex align=\"center\" flexDirection=\"column\" justifyContent=\"center\" width=\"100%\" height=\"auto\">\n            {/* <Button onClick={handleClick}>Add Player</Button> */}\n           \n            \n            <Flex justifyContent=\"space-around\" width=\"100%\" height=\"100px\">\n                \n                <Button id=\"player1\" onClick={() => selectPlayer(\"player1\")}>\n                    {\n                        games && games.map(game => {\n                            return (\n                                game.player1Name\n                            )\n                        })\n                    }\n                </Button>\n                <Button id=\"start-game\" onClick={() => startGame()}> Start</Button>\n                <Button id=\"player2\" onClick={() => selectPlayer(\"player2\")}>\n                    {\n                        games && games.map(game => {\n                            return (\n                                game.player2Name\n                            )\n                        })\n                    }\n                </Button>\n            </Flex>\n\n            <div ref={ref} />\n\n        </Flex>\n\n    )\n}\n\nexport default Scene\n","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Login/Login.js",["92","93","94"],"import React, { useContext, useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { MainContext } from '../../mainContext'\nimport { SocketContext } from '../../socketContext'\nimport { Flex, Heading, IconButton, Input } from \"@chakra-ui/react\"\nimport { RiArrowRightLine } from \"react-icons/ri\"\nimport { useToast } from \"@chakra-ui/react\"\nimport { UsersContext } from '../../usersContext'\n\nconst Login = () => {\n    const socket = useContext(SocketContext)\n    const { name, setName, room, setRoom } = useContext(MainContext)\n    const history = useHistory()\n    const toast = useToast()\n    const { users, setUsers, games, setGames } = useContext(UsersContext)\n\n    //Checks to see if there's a user already present\n\n    useEffect(() => {\n        socket.on(\"users\", users => {\n            setUsers(users)\n        })\n        socket.on(\"games\", games => {\n            setGames(games)\n        })\n    })\n\n    //Emits the login event and if successful redirects to chat and saves user data\n    const handleClick = () => {\n        socket.emit('login', { name, room }, error => {\n            if (error) {\n                console.log(error)\n                return toast({\n                    position: \"top\",\n                    title: \"Error\",\n                    description: error,\n                    status: \"error\",\n                    duration: 5000,\n                    isClosable: true,\n                })\n            }\n       \n            history.push('/game')\n            return toast({\n                position: \"top\",\n                title: \"Hey there\",\n                description: `Welcome to ${room}`,\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            })\n        })\n    }\n\n    return (\n        <Flex className='login' flexDirection='column' mb='8'>\n            <Heading as=\"h1\" size=\"4xl\" textAlign='center' mb='8' fontFamily='DM Sans' fontWeight='600' letterSpacing='-2px'>Pong.io</Heading>\n            <Flex className=\"form\" gap='1rem' flexDirection={{ base: \"column\", md: \"row\" }}>\n                <Input variant='filled' mr={{ base: \"0\", md: \"4\" }} mb={{ base: \"4\", md: \"0\" }} type=\"text\" placeholder='User Name' value={name} onChange={e => setName(e.target.value)} />\n                <Input variant='filled' mr={{ base: \"0\", md: \"4\" }} mb={{ base: \"4\", md: \"0\" }} type=\"text\" placeholder='Room Name' value={room} onChange={e => setRoom(e.target.value)} />\n                <IconButton colorScheme='blue' isRound='true' icon={<RiArrowRightLine />} onClick={handleClick}></IconButton>\n            </Flex>\n        </Flex>\n    )\n}\n\nexport default Login\n",["95","96"],"/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/DefaultPage.js",["97"],"import { IconButton } from '@chakra-ui/react'\nimport React from 'react'\nimport { BiArrowBack } from 'react-icons/bi'\nimport { Redirect, useHistory } from 'react-router-dom'\nexport default function DefaultPage() {\n    const history = useHistory()\n    const redirect = () => history.push('/')\n    return (\n        <div>\n            <IconButton mr={2} isRound='true' bg='green.300' color='white' icon={<BiArrowBack />} onClick={redirect} /> You're lost. Go home.\n        </div>\n    )\n}\n","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/socketContext.js",[],["98","99"],"/Users/michaelwideburg/Desktop/multiGame/chat-client/src/usersContext.js",[],"/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Game/game.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"\nimport ReactDOM from \"react-dom\";\nimport React, { useContext, useEffect, useState, useRef } from 'react'\nimport { Box, Flex, Heading, IconButton, Text, Menu, Button, MenuButton, MenuList, MenuItem } from \"@chakra-ui/react\"\nimport { useHistory } from 'react-router-dom'\nimport { MainContext } from '../../mainContext'\nimport { SocketContext } from '../../socketContext'\nimport { UsersContext } from '../../usersContext'\nimport * as THREE from \"three\";\nimport Chat from '../Chat/Chat'\nimport Scene from './scene'\n\nimport { Socket } from \"socket.io-client\";\nfunction Game() {\n    const { name, room, setName, setRoom } = useContext(MainContext)\n    const { users } = useContext(UsersContext)\n    const socket = useContext(SocketContext)\n    const scene = Scene();\n\n    // const [scene, setScene] = useState(new Scene())\n    // useEffect(() =>{\n       \n    //     users && users.forEach(user => {\n    //         if(user.game === undefined){\n    //             socket.on('addGame', {room, scene})\n    //         }else{\n    //             setScene(user.game)\n    //         }\n            \n    //     })\n    // })\n    \n    return (\n        <Flex align=\"center\" flexDirection=\"row\" width={{ base: \"100%\" }} height={{ base: \"100%\", sm: \"auto\" }}>\n            {scene} \n            <Chat />\n        </Flex>\n\n    )\n}\n\nexport default Game\n","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/App.js",["122"],"import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Login from './components/Login/Login'\nimport Chat from './components/Chat/Chat'\nimport { SocketProvider } from './socketContext'\nimport { MainProvider } from './mainContext'\nimport './App.css'\nimport { ChakraProvider, Flex } from \"@chakra-ui/react\"\nimport { UsersProvider } from './usersContext'\nimport DefaultPage from './components/DefaultPage'\nimport Game from './components/Game/game'\nfunction App() {\n  return (\n    <ChakraProvider>\n      <MainProvider>\n        <UsersProvider>\n          <SocketProvider>\n            <Flex className=\"App\" align='center' flexDirection=\"column\" justifyContent='center'>\n              <Router>\n                <Switch>\n                  <Route exact path='/' component={Login} />\n                  <Route path='/game' component={Game} />\n                  <Route component={DefaultPage} />\n                </Switch>\n              </Router>\n              \n            </Flex>\n          </SocketProvider>\n        </UsersProvider>\n      </MainProvider>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Game/pong.js",["123","124","125","126","127","128"],"/Users/michaelwideburg/Desktop/multiGame/chat-client/src/components/Game/scene2.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":16},{"ruleId":"157","severity":1,"message":"161","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":13},{"ruleId":"157","severity":1,"message":"162","line":3,"column":21,"nodeType":"159","messageId":"160","endLine":3,"endColumn":28},{"ruleId":"157","severity":1,"message":"163","line":3,"column":30,"nodeType":"159","messageId":"160","endLine":3,"endColumn":40},{"ruleId":"157","severity":1,"message":"164","line":3,"column":42,"nodeType":"159","messageId":"160","endLine":3,"endColumn":46},{"ruleId":"157","severity":1,"message":"165","line":3,"column":48,"nodeType":"159","messageId":"160","endLine":3,"endColumn":52},{"ruleId":"157","severity":1,"message":"166","line":3,"column":62,"nodeType":"159","messageId":"160","endLine":3,"endColumn":72},{"ruleId":"157","severity":1,"message":"167","line":3,"column":74,"nodeType":"159","messageId":"160","endLine":3,"endColumn":82},{"ruleId":"157","severity":1,"message":"168","line":3,"column":84,"nodeType":"159","messageId":"160","endLine":3,"endColumn":92},{"ruleId":"157","severity":1,"message":"169","line":10,"column":10,"nodeType":"159","messageId":"160","endLine":10,"endColumn":16},{"ruleId":"157","severity":1,"message":"170","line":15,"column":27,"nodeType":"159","messageId":"160","endLine":15,"endColumn":35},{"ruleId":"157","severity":1,"message":"171","line":15,"column":37,"nodeType":"159","messageId":"160","endLine":15,"endColumn":45},{"ruleId":"157","severity":1,"message":"172","line":16,"column":31,"nodeType":"159","messageId":"160","endLine":16,"endColumn":38},{"ruleId":"157","severity":1,"message":"173","line":16,"column":40,"nodeType":"159","messageId":"160","endLine":16,"endColumn":47},{"ruleId":"157","severity":1,"message":"174","line":16,"column":49,"nodeType":"159","messageId":"160","endLine":16,"endColumn":56},{"ruleId":"157","severity":1,"message":"175","line":17,"column":19,"nodeType":"159","messageId":"160","endLine":17,"endColumn":27},{"ruleId":"157","severity":1,"message":"176","line":20,"column":11,"nodeType":"159","messageId":"160","endLine":20,"endColumn":22},{"ruleId":"157","severity":1,"message":"177","line":20,"column":24,"nodeType":"159","messageId":"160","endLine":20,"endColumn":32},{"ruleId":"157","severity":1,"message":"178","line":21,"column":11,"nodeType":"159","messageId":"160","endLine":21,"endColumn":22},{"ruleId":"179","severity":1,"message":"180","line":24,"column":62,"nodeType":"181","endLine":24,"endColumn":77,"suggestions":"182"},{"ruleId":"157","severity":1,"message":"183","line":25,"column":12,"nodeType":"159","messageId":"160","endLine":25,"endColumn":23},{"ruleId":"157","severity":1,"message":"184","line":25,"column":25,"nodeType":"159","messageId":"160","endLine":25,"endColumn":39},{"ruleId":"157","severity":1,"message":"185","line":27,"column":11,"nodeType":"159","messageId":"160","endLine":27,"endColumn":23},{"ruleId":"157","severity":1,"message":"186","line":41,"column":15,"nodeType":"159","messageId":"160","endLine":41,"endColumn":24},{"ruleId":"157","severity":1,"message":"187","line":42,"column":13,"nodeType":"159","messageId":"160","endLine":42,"endColumn":23},{"ruleId":"188","severity":1,"message":"189","line":74,"column":25,"nodeType":"190","messageId":"191","endLine":74,"endColumn":27},{"ruleId":"188","severity":1,"message":"189","line":108,"column":27,"nodeType":"190","messageId":"191","endLine":108,"endColumn":29},{"ruleId":"157","severity":1,"message":"192","line":204,"column":21,"nodeType":"159","messageId":"160","endLine":204,"endColumn":29},{"ruleId":"157","severity":1,"message":"193","line":214,"column":21,"nodeType":"159","messageId":"160","endLine":214,"endColumn":30},{"ruleId":"157","severity":1,"message":"194","line":275,"column":23,"nodeType":"159","messageId":"160","endLine":275,"endColumn":31},{"ruleId":"179","severity":1,"message":"195","line":347,"column":8,"nodeType":"181","endLine":347,"endColumn":10,"suggestions":"196"},{"ruleId":"157","severity":1,"message":"197","line":397,"column":15,"nodeType":"159","messageId":"160","endLine":397,"endColumn":21},{"ruleId":"157","severity":1,"message":"198","line":1,"column":29,"nodeType":"159","messageId":"160","endLine":1,"endColumn":37},{"ruleId":"157","severity":1,"message":"199","line":15,"column":13,"nodeType":"159","messageId":"160","endLine":15,"endColumn":18},{"ruleId":"157","severity":1,"message":"200","line":15,"column":30,"nodeType":"159","messageId":"160","endLine":15,"endColumn":35},{"ruleId":"153","replacedBy":"201"},{"ruleId":"155","replacedBy":"202"},{"ruleId":"157","severity":1,"message":"203","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":18},{"ruleId":"153","replacedBy":"204"},{"ruleId":"155","replacedBy":"205"},{"ruleId":"157","severity":1,"message":"158","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"206","line":3,"column":29,"nodeType":"159","messageId":"160","endLine":3,"endColumn":38},{"ruleId":"157","severity":1,"message":"198","line":3,"column":40,"nodeType":"159","messageId":"160","endLine":3,"endColumn":48},{"ruleId":"157","severity":1,"message":"207","line":3,"column":50,"nodeType":"159","messageId":"160","endLine":3,"endColumn":56},{"ruleId":"157","severity":1,"message":"161","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":13},{"ruleId":"157","severity":1,"message":"162","line":4,"column":21,"nodeType":"159","messageId":"160","endLine":4,"endColumn":28},{"ruleId":"157","severity":1,"message":"163","line":4,"column":30,"nodeType":"159","messageId":"160","endLine":4,"endColumn":40},{"ruleId":"157","severity":1,"message":"164","line":4,"column":42,"nodeType":"159","messageId":"160","endLine":4,"endColumn":46},{"ruleId":"157","severity":1,"message":"165","line":4,"column":48,"nodeType":"159","messageId":"160","endLine":4,"endColumn":52},{"ruleId":"157","severity":1,"message":"208","line":4,"column":54,"nodeType":"159","messageId":"160","endLine":4,"endColumn":60},{"ruleId":"157","severity":1,"message":"166","line":4,"column":62,"nodeType":"159","messageId":"160","endLine":4,"endColumn":72},{"ruleId":"157","severity":1,"message":"167","line":4,"column":74,"nodeType":"159","messageId":"160","endLine":4,"endColumn":82},{"ruleId":"157","severity":1,"message":"168","line":4,"column":84,"nodeType":"159","messageId":"160","endLine":4,"endColumn":92},{"ruleId":"157","severity":1,"message":"209","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":20},{"ruleId":"157","severity":1,"message":"210","line":9,"column":13,"nodeType":"159","messageId":"160","endLine":9,"endColumn":18},{"ruleId":"157","severity":1,"message":"169","line":13,"column":10,"nodeType":"159","messageId":"160","endLine":13,"endColumn":16},{"ruleId":"157","severity":1,"message":"211","line":15,"column":13,"nodeType":"159","messageId":"160","endLine":15,"endColumn":17},{"ruleId":"157","severity":1,"message":"212","line":15,"column":19,"nodeType":"159","messageId":"160","endLine":15,"endColumn":23},{"ruleId":"157","severity":1,"message":"172","line":15,"column":25,"nodeType":"159","messageId":"160","endLine":15,"endColumn":32},{"ruleId":"157","severity":1,"message":"173","line":15,"column":34,"nodeType":"159","messageId":"160","endLine":15,"endColumn":41},{"ruleId":"157","severity":1,"message":"199","line":16,"column":13,"nodeType":"159","messageId":"160","endLine":16,"endColumn":18},{"ruleId":"157","severity":1,"message":"213","line":17,"column":11,"nodeType":"159","messageId":"160","endLine":17,"endColumn":17},{"ruleId":"157","severity":1,"message":"214","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":12},{"ruleId":"157","severity":1,"message":"215","line":2,"column":16,"nodeType":"159","messageId":"160","endLine":2,"endColumn":30},{"ruleId":"157","severity":1,"message":"216","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":16},{"ruleId":"157","severity":1,"message":"217","line":52,"column":15,"nodeType":"159","messageId":"160","endLine":52,"endColumn":25},{"ruleId":"188","severity":1,"message":"189","line":75,"column":23,"nodeType":"190","messageId":"191","endLine":75,"endColumn":25},{"ruleId":"188","severity":1,"message":"189","line":75,"column":55,"nodeType":"190","messageId":"191","endLine":75,"endColumn":57},{"ruleId":"157","severity":1,"message":"218","line":144,"column":17,"nodeType":"159","messageId":"160","endLine":144,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":16},{"ruleId":"157","severity":1,"message":"161","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":13},{"ruleId":"157","severity":1,"message":"162","line":3,"column":21,"nodeType":"159","messageId":"160","endLine":3,"endColumn":28},{"ruleId":"157","severity":1,"message":"163","line":3,"column":30,"nodeType":"159","messageId":"160","endLine":3,"endColumn":40},{"ruleId":"157","severity":1,"message":"164","line":3,"column":42,"nodeType":"159","messageId":"160","endLine":3,"endColumn":46},{"ruleId":"157","severity":1,"message":"165","line":3,"column":48,"nodeType":"159","messageId":"160","endLine":3,"endColumn":52},{"ruleId":"157","severity":1,"message":"166","line":3,"column":62,"nodeType":"159","messageId":"160","endLine":3,"endColumn":72},{"ruleId":"157","severity":1,"message":"167","line":3,"column":74,"nodeType":"159","messageId":"160","endLine":3,"endColumn":82},{"ruleId":"157","severity":1,"message":"168","line":3,"column":84,"nodeType":"159","messageId":"160","endLine":3,"endColumn":92},{"ruleId":"157","severity":1,"message":"209","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":20},{"ruleId":"157","severity":1,"message":"219","line":9,"column":10,"nodeType":"159","messageId":"160","endLine":9,"endColumn":29},{"ruleId":"157","severity":1,"message":"169","line":10,"column":10,"nodeType":"159","messageId":"160","endLine":10,"endColumn":16},{"ruleId":"157","severity":1,"message":"199","line":15,"column":13,"nodeType":"159","messageId":"160","endLine":15,"endColumn":18},{"ruleId":"157","severity":1,"message":"200","line":15,"column":20,"nodeType":"159","messageId":"160","endLine":15,"endColumn":25},{"ruleId":"157","severity":1,"message":"170","line":15,"column":27,"nodeType":"159","messageId":"160","endLine":15,"endColumn":35},{"ruleId":"157","severity":1,"message":"171","line":15,"column":37,"nodeType":"159","messageId":"160","endLine":15,"endColumn":45},{"ruleId":"157","severity":1,"message":"211","line":16,"column":13,"nodeType":"159","messageId":"160","endLine":16,"endColumn":17},{"ruleId":"157","severity":1,"message":"212","line":16,"column":19,"nodeType":"159","messageId":"160","endLine":16,"endColumn":23},{"ruleId":"157","severity":1,"message":"172","line":16,"column":25,"nodeType":"159","messageId":"160","endLine":16,"endColumn":32},{"ruleId":"157","severity":1,"message":"173","line":16,"column":34,"nodeType":"159","messageId":"160","endLine":16,"endColumn":41},{"ruleId":"157","severity":1,"message":"175","line":17,"column":19,"nodeType":"159","messageId":"160","endLine":17,"endColumn":27},{"ruleId":"157","severity":1,"message":"174","line":18,"column":18,"nodeType":"159","messageId":"160","endLine":18,"endColumn":25},{"ruleId":"157","severity":1,"message":"213","line":19,"column":11,"nodeType":"159","messageId":"160","endLine":19,"endColumn":17},{"ruleId":"157","severity":1,"message":"220","line":77,"column":11,"nodeType":"159","messageId":"160","endLine":77,"endColumn":22},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Heading' is defined but never used.","'IconButton' is defined but never used.","'Text' is defined but never used.","'Menu' is defined but never used.","'MenuButton' is defined but never used.","'MenuList' is defined but never used.","'MenuItem' is defined but never used.","'Socket' is defined but never used.","'setUsers' is assigned a value but never used.","'setGames' is assigned a value but never used.","'setName' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'setGame' is assigned a value but never used.","'setScene' is assigned a value but never used.","'player1Name' is assigned a value but never used.","'setName1' is assigned a value but never used.","'player2Name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["223"],"'pressedKeys' is assigned a value but never used.","'setPressedKeys' is assigned a value but never used.","'ALLOWED_KEYS' is assigned a value but never used.","'direction' is assigned a value but never used.","'selections' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'moveLeft' is assigned a value but never used.","'moveRight' is assigned a value but never used.","'distance' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'games.status', 'name', 'room', 'scene', and 'socket'. Either include them or remove the dependency array.",["224"],"'player' is assigned a value but never used.","'useState' is defined but never used.","'users' is assigned a value but never used.","'games' is assigned a value but never used.",["221"],["222"],"'Redirect' is defined but never used.",["221"],["222"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'Button' is defined but never used.","'useHistory' is defined but never used.","'THREE' is defined but never used.","'name' is assigned a value but never used.","'room' is assigned a value but never used.","'socket' is assigned a value but never used.","'Chat' is defined but never used.","'ReactComponent' is defined but never used.","'render' is defined but never used.","'newPlayers' is assigned a value but never used.","'dir' is assigned a value but never used.","'PointerLockControls' is defined but never used.","'handleClick' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [history, game, name]",{"range":"229","text":"230"},"Update the dependencies array to be: [games.status, name, room, scene, socket]",{"range":"231","text":"232"},[1154,1169],"[history, game, name]",[10473,10475],"[games.status, name, room, scene, socket]"]